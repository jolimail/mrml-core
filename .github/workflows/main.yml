on: [push]

env:
  RUSTFLAGS: "-Dwarnings"

jobs:
  code-checking:
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.ref }}-code-checking
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt,clippy

      - uses: taiki-e/install-action@cargo-hack
          
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-code-checking-${{ hashFiles('**/Cargo.lock') }}

      - name: install required cargo packages
        run: cargo install clippy-sarif sarif-fmt

      - name: run lint
        run: cargo fmt --check

      - name: run check on features
        run: cargo hack check --each-feature --no-dev-deps

      - name: run check with tests
        run: cargo check --all-features --tests

      - name: run clippy
        run: cargo clippy --all-targets --all-features --tests --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  testing:
    runs-on: ubuntu-latest
    container: rust:1-bullseye

    concurrency: 
      group: ${{ github.ref }}-testing
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3

      - name: install cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          
      - name: prepare cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-testing-${{ hashFiles('**/Cargo.lock') }}

      - name: install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: run tests
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false
